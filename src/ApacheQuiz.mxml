<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright 2018 Justin Mclean

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<js:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:js="library://ns.apache.org/royale/basic"
                xmlns:html="library://ns.apache.org/royale/html"
                applicationComplete="loadQuiz()">

    <fx:Script><![CDATA[
        import org.apache.royale.events.Event;
        import org.apache.royale.net.HTTPConstants;
        import org.apache.royale.net.HTTPService;

        import org.apache.royale.html.CheckBox;
        import org.apache.royale.html.elements.A;

        public const NO_CHECKBOXES:int = 8;
        public const NO_HINTS:int = 8;
        public const NO_LINKS:int = 8;

        public var load:HTTPService = new HTTPService();

        public var questions:Array = [];

        [Bindable] public var score:Number;
        [Bindable] public var total:int;
        [Bindable] public var maxQuestions:int;
        [Bindable] public var noQuestions:int = 5;

        public var questionNo:int;
        public var order:Array = [];
        public var level:int = 1;

        [Bindable] public var right:Boolean;
        [Bindable] public var ask:String;
        [Bindable] public var reason:String;
        [Bindable] public var link:String;
        [Bindable] public var noright:int = 0;

        public var actualShown:int;

        public function loadQuiz():void {
            load.url = "quiz.json";
            load.addEventListener("complete", loadedJSON);
            load.send();
        }

        public function loadedJSON(event:Event):void {
            questions = load.json as Array;
            maxQuestions = questions.length;
        }

        public function chooseQuestion():void {
            questionNo = Math.floor(Math.random()*maxQuestions);

            var question:Object = questions[questionNo];
            ask = question["question"];
            var showNo:int = question["show"];
            var answers:Array = question["answers"];
            var noAnswers:int = answers.length;

            for (var i:int = 1; i <= NO_CHECKBOXES; i ++) {
                var checkBox:CheckBox = this["checkbox" + i] as CheckBox;
                checkBox.visible = false;
            }

            var checkboxNo:int = 1;
            order = [];
            var tries:int = 0;
            actualShown = 0;

            while (actualShown < showNo && tries < 100) {
                checkBox = this["checkbox" + checkboxNo] as CheckBox;
                var answerNo:int = Math.floor(Math.random() * noAnswers);
                if (!order.includes(answerNo) && answers[answerNo]["level"] <= level) {
                    checkBox.text = answers[answerNo]["answer"];
                    checkBox.visible = true;
                    order.push(answerNo);
                    checkboxNo++;
                    actualShown++;
                }
                tries++;
            }
        }

        public function resetCheckboxes():void {
            for (var i:int = 1; i <= NO_CHECKBOXES; i++) {
                var checkBox:CheckBox = this["checkbox" + i] as CheckBox;
                checkBox.selected = false;
                checkBox.visible  = false;
                checkBox.text = "";
            }
        }

        public function hideHints():void {
            questionAgain.visible = false;
            for (var i:int = 1; i <= NO_HINTS; i++) {
                var hint:Label = this["hint" + i] as Label;
                var answer:CheckBox = this["answer" + i] as CheckBox;
                hint.visible = false;
                answer.visible = false;
            }
        }

        public function hideLinks():void {
            seealso.visible = false;
            for (var i:int = 1; i <= NO_LINKS; i++) {
                var link:A = this["link" + i] as A;
                link.visible = false;
            }
        }

        public function checkAnswer():Boolean {
            var question:Object = questions[questionNo];
            var hints:Array = [];
            var index:Array = [];

            right = true;
            noright = 0;

            for (var i:int = 1; i <= actualShown; i++) {
                var checkbox:CheckBox = this["checkbox" + i] as CheckBox;
                var id:int = order[i-1];
                var answer:Object = question["answers"][id];
                if (checkbox.selected) {
                    if (!answer["correct"]) {
                        right = false;
                        hints.push(answer["hint"]);
                        index.push(id);
                    }
                    else {
                        // harder questions are worth more
                        noright += answer["level"];
                    }
                }
                else {
                    if (answer["correct"]) {
                        right = false;
                        hints.push(answer["hint"]);
                        index.push(id);
                    }
                    else {
                        noright++;
                    }
                }
            }

            noright = noright * 100 / actualShown;

            total++;
            score += noright/100;
            
            reason = question.reason;

            hideHints();
            if (hints.length > 0) {
                questionAgain.visible = true;
                questionAgain.text = question["question"];
                for (i = 1; i <= hints.length; i++) {
                    var hint:Label = this["hint" + i] as Label;
                    var wrong:CheckBox = this["answer" + i] as CheckBox;
                    answer = question["answers"][index[i - 1]];
                    wrong.visible = true;
                    wrong.text = answer["answer"];
                    wrong.selected = !answer["correct"];
                    hint.visible = true;
                    hint.text = answer["hint"];
                }
            }

            var links:Array = question["links"];
            hideLinks();
            if (links.length > 0) {
                seealso.visible = true;
                for (i = 1; i <= links.length; i++) {
                    var link:A = this["link" + i] as A;
                    link.visible = true;
                    link.text = links[i-1]["name"];
                    link.href = links[i-1]["link"];
                  }
            }
            resetCheckboxes();

            return right;
        }

        public function endQuiz():void {
            if (total >= noQuestions)   {
                score = Math.round(score * 10) / 10;
                end();
            }
            else {
                question();
            }
        }

        public function reset():void {
            score = 0;
            total = 0;
        }

        public function begin():void {
            if (noQuestions > 0) {
                reset();
                question();
            }
        }

        public function settings():void {
            startPage.visible = true;
            questionPage.visible = false;
            resultPage.visible = false;
            scorePage.visible = false;
        }

        public function question():void {
            chooseQuestion();
            startPage.visible = false;
            questionPage.visible = true;
            resultPage.visible = false;
            scorePage.visible = false;
        }

        public function result():void {
            checkAnswer();
            startPage.visible = false;
            questionPage.visible = false;
            resultPage.visible = true;
            scorePage.visible = false;
        }

        public function end():void {
            startPage.visible = false;
            questionPage.visible = false;
            resultPage.visible = false;
            scorePage.visible = true;
        }
        ]]></fx:Script>

    <js:valuesImpl>
        <js:SimpleCSSValuesImpl/>
    </js:valuesImpl>

    <js:beads>
        <js:ApplicationDataBinding />
    </js:beads>
    
    <js:initialView>
        <js:View height="100%" width="100%">
            <js:beads>
                <js:VerticalLayoutWithPaddingAndGap paddingTop="10" paddingBottom="10" paddingRight="20" paddingLeft="20" />
            </js:beads>
            <js:Container id="startPage" visible="true">
                <js:beads>
                    <js:VerticalLayoutWithPaddingAndGap gap="20" />
                </js:beads>
                <js:style>
                    <js:SimpleCSSStyles padding="20" />
                </js:style>
                <js:Image src="logos/asf_logo.png" height="175" width="429" />
                <js:Label text="How much you you know about Apache policy?" />
                <js:Label text="{maxQuestions} questions loaded" />
                <js:HContainer>
                    <js:Label text="No of questions to ask:" />
                    <js:TextInput id="newQuestions" text="{noQuestions}" change="noQuestions = Number(newQuestions.text)" />
                </js:HContainer>
                <js:VContainer>
                    <js:Label text="Level:" />
                    <js:RadioButton id="easy" groupName="setLevel" width="100%" selected="true" text="Easy" change="{level = 1}" />
                    <js:RadioButton id="medium" groupName="setLevel" width="100%" text="Medium" change="{level = 2}"/>
                    <js:RadioButton id="hard" groupName="setLevel" width="100%" text="Hard" change="{level = 3}"/>
                </js:VContainer>
                <js:TextButton text="Start Quiz" click="begin()" />
            </js:Container>
            <js:Container id="questionPage" visible="false">
                <js:beads>
                    <js:VerticalLayoutWithPaddingAndGap gap="20" />
                </js:beads>
                <js:style>
                    <js:SimpleCSSStyles padding="20" />
                </js:style>
                <js:MultilineLabel text="{ask}" width="500" />
                <js:Container id="checkboxes" width="500">
                    <js:beads>
                        <js:VerticalLayoutWithPaddingAndGap gap="10" />
                    </js:beads>
                    <js:CheckBox id="checkbox1" width="100%" />
                    <js:CheckBox id="checkbox2" width="100%" />
                    <js:CheckBox id="checkbox3" width="100%" />
                    <js:CheckBox id="checkbox4" width="100%" />
                    <js:CheckBox id="checkbox5" width="100%" />
                    <js:CheckBox id="checkbox6" width="100%" />
                    <js:CheckBox id="checkbox7" width="100%" />
                    <js:CheckBox id="checkbox8" width="100%" />
                </js:Container>
                <js:MultilineLabel width="100%" text="NOTE that no answer, or one or more than one answer, could be right. Please tick all you think are correct. Each answer must be correct on its own not in combination with other answers." />
                <js:MultilineLabel width="100%" text="DISCLAIMER This is still a work in progress and some questions may need improvement and may not be in line with policy." />
                <js:TextButton text="Next Question" click="result()" />
            </js:Container>
            <js:Container id="resultPage" visible="false">
                <js:beads>
                    <js:VerticalLayoutWithPaddingAndGap gap="20" />
                </js:beads>
                <js:style>
                    <js:SimpleCSSStyles padding="20" />
                </js:style>
                <js:Label text="You got it right" visible="{right}" />
                <js:Label text="Sorry that's not quite right. Here is some help so you'll get it right next time." visible="{!right}"/>
                <js:Label text="But you were close. These are tricky questions and are trying to trip you up." visible="{!right &amp;&amp; noright > 50}"/>
                <js:VContainer>
                    <js:MultilineLabel text="{reason}" width="500" />
                </js:VContainer>
                <js:Container id="hints" width="500">
                    <js:beads>
                       <js:VerticalLayoutWithPaddingAndGap gap="10" />
                    </js:beads>
                    <js:MultilineLabel id="questionAgain" text="" />
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer1" width="100%" />
                        <js:MultilineLabel id="hint1" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer2" width="100%" />
                        <js:MultilineLabel id="hint2" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer3" width="100%" />
                        <js:MultilineLabel id="hint3" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer4" width="100%" />
                        <js:MultilineLabel id="hint4" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer5" width="100%" />
                        <js:MultilineLabel id="hint5" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer6" width="100%" />
                        <js:MultilineLabel id="hint6" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer7" width="100%" />
                        <js:MultilineLabel id="hint7" width="100%" />
                    </js:Container>
                    <js:Container>
                        <js:beads>
                           <js:VerticalLayoutWithPaddingAndGap gap="5" />
                        </js:beads>
                        <js:CheckBox id="answer8" width="100%" />
                        <js:MultilineLabel id="hint8" width="100%" />
                    </js:Container>
                </js:Container>
                <js:Container id="links" width="500">
                    <js:beads>
                       <js:VerticalLayoutWithPaddingAndGap gap="10" />
                    </js:beads>
                    <js:Label id="seealso" text="See also:" />
                    <html:A id="link1" width="100%" />
                    <html:A id="link2" width="100%" />
                    <html:A id="link3" width="100%" />
                    <html:A id="link4" width="100%" />
                    <html:A id="link5" width="100%" />
                    <html:A id="link6" width="100%" />
                    <html:A id="link7" width="100%" />
                    <html:A id="link8" width="100%" />
                </js:Container>
                <js:TextButton text="Next Question" click="endQuiz()" />
            </js:Container>
            <js:Container id="scorePage" visible="false">
                <js:beads>
                    <js:VerticalLayoutWithPaddingAndGap gap="20" />
                </js:beads>
                <js:style>
                    <js:SimpleCSSStyles padding="20" />
                </js:style>
                <js:Label text="You scored {score} out of {total}." />
                <js:TextButton text="Try Again" click="settings()" />
            </js:Container>
            <js:Label text="Copyright © 2018 Justin Mclean, Licensed under the Apache License, Version 2.0." />
            <js:Label text="Apache, the Apache feather logo are trademarks of The Apache Software Foundation." />
        </js:View>
    </js:initialView>

</js:Application>
